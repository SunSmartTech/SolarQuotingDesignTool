/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  ComponentActivation as PrismaComponentActivation,
} from "@prisma/client";

export class ComponentActivationServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ComponentActivationCountArgs, "select">
  ): Promise<number> {
    return this.prisma.componentActivation.count(args);
  }

  async componentActivations<T extends Prisma.ComponentActivationFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.ComponentActivationFindManyArgs>
  ): Promise<PrismaComponentActivation[]> {
    return this.prisma.componentActivation.findMany<Prisma.ComponentActivationFindManyArgs>(
      args
    );
  }
  async componentActivation<T extends Prisma.ComponentActivationFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.ComponentActivationFindUniqueArgs>
  ): Promise<PrismaComponentActivation | null> {
    return this.prisma.componentActivation.findUnique(args);
  }
  async createComponentActivation<
    T extends Prisma.ComponentActivationCreateArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.ComponentActivationCreateArgs>
  ): Promise<PrismaComponentActivation> {
    return this.prisma.componentActivation.create<T>(args);
  }
  async updateComponentActivation<
    T extends Prisma.ComponentActivationUpdateArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.ComponentActivationUpdateArgs>
  ): Promise<PrismaComponentActivation> {
    return this.prisma.componentActivation.update<T>(args);
  }
  async deleteComponentActivation<
    T extends Prisma.ComponentActivationDeleteArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.ComponentActivationDeleteArgs>
  ): Promise<PrismaComponentActivation> {
    return this.prisma.componentActivation.delete(args);
  }
}
