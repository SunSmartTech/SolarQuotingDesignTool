/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  DocumentTemplate as PrismaDocumentTemplate,
} from "@prisma/client";

export class DocumentTemplateServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.DocumentTemplateCountArgs, "select">
  ): Promise<number> {
    return this.prisma.documentTemplate.count(args);
  }

  async documentTemplates<T extends Prisma.DocumentTemplateFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.DocumentTemplateFindManyArgs>
  ): Promise<PrismaDocumentTemplate[]> {
    return this.prisma.documentTemplate.findMany<Prisma.DocumentTemplateFindManyArgs>(
      args
    );
  }
  async documentTemplate<T extends Prisma.DocumentTemplateFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.DocumentTemplateFindUniqueArgs>
  ): Promise<PrismaDocumentTemplate | null> {
    return this.prisma.documentTemplate.findUnique(args);
  }
  async createDocumentTemplate<T extends Prisma.DocumentTemplateCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.DocumentTemplateCreateArgs>
  ): Promise<PrismaDocumentTemplate> {
    return this.prisma.documentTemplate.create<T>(args);
  }
  async updateDocumentTemplate<T extends Prisma.DocumentTemplateUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.DocumentTemplateUpdateArgs>
  ): Promise<PrismaDocumentTemplate> {
    return this.prisma.documentTemplate.update<T>(args);
  }
  async deleteDocumentTemplate<T extends Prisma.DocumentTemplateDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.DocumentTemplateDeleteArgs>
  ): Promise<PrismaDocumentTemplate> {
    return this.prisma.documentTemplate.delete(args);
  }
}
