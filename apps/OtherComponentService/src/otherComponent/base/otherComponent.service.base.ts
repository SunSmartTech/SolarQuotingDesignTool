/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, OtherComponent as PrismaOtherComponent } from "@prisma/client";

export class OtherComponentServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.OtherComponentCountArgs, "select">
  ): Promise<number> {
    return this.prisma.otherComponent.count(args);
  }

  async otherComponents<T extends Prisma.OtherComponentFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.OtherComponentFindManyArgs>
  ): Promise<PrismaOtherComponent[]> {
    return this.prisma.otherComponent.findMany<Prisma.OtherComponentFindManyArgs>(
      args
    );
  }
  async otherComponent<T extends Prisma.OtherComponentFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.OtherComponentFindUniqueArgs>
  ): Promise<PrismaOtherComponent | null> {
    return this.prisma.otherComponent.findUnique(args);
  }
  async createOtherComponent<T extends Prisma.OtherComponentCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.OtherComponentCreateArgs>
  ): Promise<PrismaOtherComponent> {
    return this.prisma.otherComponent.create<T>(args);
  }
  async updateOtherComponent<T extends Prisma.OtherComponentUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.OtherComponentUpdateArgs>
  ): Promise<PrismaOtherComponent> {
    return this.prisma.otherComponent.update<T>(args);
  }
  async deleteOtherComponent<T extends Prisma.OtherComponentDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.OtherComponentDeleteArgs>
  ): Promise<PrismaOtherComponent> {
    return this.prisma.otherComponent.delete(args);
  }
}
