/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, PaymentOption as PrismaPaymentOption } from "@prisma/client";

export class PaymentOptionServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PaymentOptionCountArgs, "select">
  ): Promise<number> {
    return this.prisma.paymentOption.count(args);
  }

  async paymentOptions<T extends Prisma.PaymentOptionFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.PaymentOptionFindManyArgs>
  ): Promise<PrismaPaymentOption[]> {
    return this.prisma.paymentOption.findMany<Prisma.PaymentOptionFindManyArgs>(
      args
    );
  }
  async paymentOption<T extends Prisma.PaymentOptionFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.PaymentOptionFindUniqueArgs>
  ): Promise<PrismaPaymentOption | null> {
    return this.prisma.paymentOption.findUnique(args);
  }
  async createPaymentOption<T extends Prisma.PaymentOptionCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.PaymentOptionCreateArgs>
  ): Promise<PrismaPaymentOption> {
    return this.prisma.paymentOption.create<T>(args);
  }
  async updatePaymentOption<T extends Prisma.PaymentOptionUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.PaymentOptionUpdateArgs>
  ): Promise<PrismaPaymentOption> {
    return this.prisma.paymentOption.update<T>(args);
  }
  async deletePaymentOption<T extends Prisma.PaymentOptionDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.PaymentOptionDeleteArgs>
  ): Promise<PrismaPaymentOption> {
    return this.prisma.paymentOption.delete(args);
  }
}
