/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  AssignedSiteInspector as PrismaAssignedSiteInspector,
} from "@prisma/client";

export class AssignedSiteInspectorServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.AssignedSiteInspectorCountArgs, "select">
  ): Promise<number> {
    return this.prisma.assignedSiteInspector.count(args);
  }

  async assignedSiteInspectors<
    T extends Prisma.AssignedSiteInspectorFindManyArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.AssignedSiteInspectorFindManyArgs>
  ): Promise<PrismaAssignedSiteInspector[]> {
    return this.prisma.assignedSiteInspector.findMany<Prisma.AssignedSiteInspectorFindManyArgs>(
      args
    );
  }
  async assignedSiteInspector<
    T extends Prisma.AssignedSiteInspectorFindUniqueArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.AssignedSiteInspectorFindUniqueArgs>
  ): Promise<PrismaAssignedSiteInspector | null> {
    return this.prisma.assignedSiteInspector.findUnique(args);
  }
  async createAssignedSiteInspector<
    T extends Prisma.AssignedSiteInspectorCreateArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.AssignedSiteInspectorCreateArgs>
  ): Promise<PrismaAssignedSiteInspector> {
    return this.prisma.assignedSiteInspector.create<T>(args);
  }
  async updateAssignedSiteInspector<
    T extends Prisma.AssignedSiteInspectorUpdateArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.AssignedSiteInspectorUpdateArgs>
  ): Promise<PrismaAssignedSiteInspector> {
    return this.prisma.assignedSiteInspector.update<T>(args);
  }
  async deleteAssignedSiteInspector<
    T extends Prisma.AssignedSiteInspectorDeleteArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.AssignedSiteInspectorDeleteArgs>
  ): Promise<PrismaAssignedSiteInspector> {
    return this.prisma.assignedSiteInspector.delete(args);
  }
}
